{"version":3,"sources":["components/Header.js","components/JourneyForm.js","components/JourneyTableElement.js","components/JourneyContainer.js","App.js","index.js"],"names":["Header","title","subtitle","Jumbotron","JourneyForm","updateJourneyDetails","setDepartureLoc","setArrivalLoc","setDate","Form","onSubmit","event","preventDefault","Row","form","Col","md","FormGroup","Label","for","Input","onChange","target","value","type","name","id","placeholder","required","Button","color","JourneyStop","canton","municipality","incidence","highestIncidence","ratio","Math","ceil","bgColor","style","background","JourneyContainer","content","from","to","date","incidences","map","contentElement","max","marginTop","substr","Table","index","JourneyTableElement","municipalityName","floor","window","SearchChMap","routemode","controls","kantonsServices","ZH","GR","BS","BL","TG","AG","ZG","BE","SO","LU","SZ","SG","FR","App","useState","departureLoc","arrivalLoc","setMunicipality","boolean","setBoolean","tableContent","setTableContent","useEffect","script","document","createElement","src","async","body","appendChild","addEventListener","a","route","stops","pois","Object","entries","flat","filter","stop","concat","waypoints","fetch","JSON","stringify","paths","point","lon","lat","response","json","data","municipalityData","results","d","bfsNr","attributes","kanton","gemname","fetchData","muniWithUrls","muni","urlMunicipality","urlIncidences","undefined","forEach","then","tripData","catch","err","console","error","Container","set","maxWidth","height","border","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bdb38d90.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Jumbotron } from 'reactstrap'\r\n\r\nconst Header = ({ title, subtitle}) => {\r\n  return (\r\n    <Jumbotron>\r\n      <h1>{title}</h1>\r\n      <h3>{subtitle}</h3>\r\n    </Jumbotron>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  FormGroup,\r\n  Label,\r\n  Button,\r\n} from 'reactstrap'\r\n\r\nconst JourneyForm = ({ updateJourneyDetails, setDepartureLoc, setArrivalLoc, setDate }) => {\r\n\r\n  const updateDeparture = (event) => setDepartureLoc(event.target.value)\r\n  const updateArrival = (event) => setArrivalLoc(event.target.value)\r\n  const updateDate = (event) => setDate(event.target.value)\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    updateJourneyDetails()\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Row form>\r\n        <Col md={6}>\r\n          <FormGroup>\r\n            <Label for=\"departureLoc\">Von</Label>\r\n            <Input \r\n              onChange={updateDeparture} \r\n              type=\"text\" \r\n              name=\"departureLoc\" \r\n              id=\"departureLoc\" \r\n              placeholder=\"Abfahrtsort\" \r\n              required\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col md={6}>\r\n          <FormGroup>\r\n            <Label for=\"arrivalLoc\">Nach</Label>\r\n            <Input \r\n              onChange={updateArrival} \r\n              type=\"text\" name=\"arrivalLoc\" \r\n              id=\"arrivalLoc\" \r\n              placeholder=\"Ankunftsort\" \r\n              required\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row form>\r\n        <Col md={3}>\r\n          <FormGroup>\r\n          <Label for=\"date\">Date</Label>\r\n          <Input\r\n            onChange={updateDate}\r\n            type=\"date\"\r\n            name=\"date\"\r\n            id=\"date\"\r\n            placeholder=\"date placeholder\"\r\n            required\r\n          />\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <Button color=\"primary\">Route berechnen</Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default JourneyForm","import React from 'react'\r\n\r\nconst JourneyStop = ({ canton, municipality, incidence, highestIncidence }) => {\r\n  const ratio = Math.ceil(incidence / highestIncidence * 100)\r\n\r\n  const bgColor = ratio >= 75\r\n    ? '#ff0101bd' : ratio >= 50\r\n    ? 'orange' : ratio >= 25\r\n    ? 'yellow' : '#31dc31'\r\n\r\n  return (\r\n    <tr>\r\n      <td>{canton}</td>\r\n      <td>{municipality}</td>\r\n      <td style={{ background: bgColor }}>{incidence}</td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default JourneyStop","import React from 'react'\r\nimport { Table } from 'reactstrap'\r\nimport JourneyTableElement from './JourneyTableElement'\r\n\r\n\r\nconst JourneyContainer = ({ content, from, to, date }) => {\r\n\r\n  const incidences = content.map(contentElement => contentElement.incidences.incidence)\r\n  const highestIncidence = Math.max(...incidences)\r\n\r\n\r\n  return (\r\n    <>\r\n      <h2 style={{ marginTop: '2rem' }}>Inzidenzentabelle</h2>\r\n      <p>{date ? `Von ${from} nach ${to} am ${date.substr(8,2)}.${date.substr(5,2)}.${date.substr(0,4)}` : 'Bitte w√§hlen Sie eine Route aus'}</p>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Kanton</th>\r\n            <th>Gemeinde</th>\r\n            <th>Inzidenzwert</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {content.map((contentElement, index) => \r\n            <JourneyTableElement key={index} canton={contentElement.canton} municipality={contentElement.municipalityName} incidence={Math.floor(contentElement.incidences.incidence)} highestIncidence={highestIncidence} />\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default JourneyContainer","import React, { useState, useEffect } from 'react'\nimport {\n  Container,\n} from 'reactstrap'\nimport Header from './components/Header'\nimport JourneyForm from './components/JourneyForm'\nimport JourneyContainer from './components/JourneyContainer'\n\nlet map = new window.SearchChMap({ from: '', to: '', routemode:\"oev\", controls:\"all\" });\n\nconst kantonsServices = {\n  ZH: 'https://jagd.ddns.net/api',\n  GR: 'https://gr.corona-navigator.ch/v1',\n  BS: 'https://86.119.34.31',\n  BL: 'https://86.119.34.31',\n  TG: 'https://thurgau.entry-check.ch/api/v1',\n  AG: 'https://covid-navigator.ch/api',\n  ZG: 'http://86.119.34.76/kantonsservice-zug',\n  BE: 'https://bern.coronanavigator.ch',\n  SO: 'https://conav.dvob.ch/api/v1',\n  LU: 'https://86.119.34.70',\n  SZ: 'https://86.119.43.84/api',\n  SG: 'https://86.119.43.232:8888',\n  FR: 'https://service-devl.wodss12.cf',\n}\n\n\n\nconst App = () => { \n\n  const [departureLoc, setDepartureLoc] = useState('')\n  const [arrivalLoc, setArrivalLoc] = useState('')\n  const [municipality, setMunicipality] = useState([])\n  const [date, setDate] = useState('')\n  const [boolean, setBoolean] = useState(false)  \n  const [tableContent, setTableContent] = useState([])\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"//map.search.ch/api/map.js?lang=de\";\n    script.async = true;\n  \n    document.body.appendChild(script);\n\n    map.addEventListener('change', async () => {\n      if(map.route) {\n\n        const baseUrl = \"https://api3.geo.admin.ch/rest/services/api/MapServer/identify?\";\n\n        const layers = \"all:ch.swisstopo.swissboundaries3d-gemeinde-flaeche.fill\";\n\n        let stops = []\n        if(map.route.pois) stops = Object.entries(map.route.pois).flat().filter(stop => stop instanceof Object)\n\n        stops = stops.concat(map.route.waypoints)\n\n        const response = await fetch(\n          `${baseUrl}sr=4326&geometry=${JSON.stringify({ paths: [stops.map(point => [point.lon, point.lat])]})}&geometryType=esriGeometryPolyline&tolerance=0&returnGeometry=false&lang=de&layers=${layers}` \n        )\n      \n        const data = await response.json()\n\n        const municipalityData = data.results.map(d => {\n          return {\n            bfsNr: d.id,\n            canton: d.attributes.kanton,\n            municipalityName: d.attributes.gemname\n          }\n        })\n        setMunicipality(municipalityData)  \n      }\n    })\n  }, [])\n\n  useEffect(() => {\n    if(!boolean) return\n    fetchData()\n    setBoolean(false)\n    // eslint-disable-next-line\n  }, [municipality])\n\n  // eslint-disable-next-line\n  const muniWithUrls = municipality.map(muni => {\n    if(kantonsServices[muni.canton]){\n      const urlMunicipality = `${kantonsServices[muni.canton]}/municipalities/${muni.bfsNr}`\n      const urlIncidences = `${kantonsServices[muni.canton]}/incidences/${muni.bfsNr}?dateFrom=${date}&dateTo=${date}`\n      return {\n        bfsNr: muni.bfsNr,\n        canton: muni.canton,\n        municipalityName: muni.municipalityName,\n        urlIncidences,\n        urlMunicipality\n      }\n    }\n  }).filter(muni => muni !== undefined)\n  \n  const fetchData = () => {\n    let content = []\n\n    muniWithUrls.forEach(muni => {\n      fetch(muni.urlIncidences)\n        .then(response => response.json())\n        .then(data => {\n          const tripData = {\n            canton: muni.canton,\n            municipalityName: muni.municipalityName,\n            incidences: data[0]\n          }\n          content = [...content, tripData]\n        })\n        .then(() => {\n          setTableContent(content)\n        })\n        .catch(err => console.error(err))\n    })\n  }\n\n  const styleObj = {\n    maxWidth: \"100vw\",\n    height: \"500px\",\n    border: \"2px inset #ccc\",\n    marginTop: \"2rem\"\n  }\n\n  const handleSubmit = () => {\n    map.set({ from: departureLoc, to: arrivalLoc, routemode:\"oev\", controls:\"all\" })\n    setBoolean(true)\n  }\n\n  return (\n    <Container>\n      <Header \n        title={'Corona Navigator'} \n        subtitle={'Tragen Sie Ihren Streckenabschnitt ein und finden Sie riskante Gebiete auf Ihrem Weg'} \n      />\n      <JourneyForm updateJourneyDetails={handleSubmit} setDepartureLoc={setDepartureLoc} setArrivalLoc={setArrivalLoc} setDate={setDate} />\n      <div id=\"mapcontainer\" style={styleObj}></div>\n      <JourneyContainer content={tableContent} from={departureLoc} to={arrivalLoc} date={date} />\n    </Container>  \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}